* {
    box-sizing: border-box;
}

body {
    margin: 0;
    font-family: sans-serif;
    font-size: var(--font-size);
}

a {
    text-decoration: none;
    color: var(--accent-color);
}

a:hover {
    color: var(--accent-v1-color);
}

h1,
h2,
h3 {
    margin: 0;
}

main {
    height: 100vh;
}

/*
Utils
*/
/* Behaviours */
.h_inv:hover {
    color: var(--main-bg-color);
    background-color: var(--main-font-color);
}

.c-ptr {
    cursor: pointer;
}

/* Box Model */
.brd {
    border: var(--borders);
    border-radius: var(--border-radius);
}

.pd {
    padding: var(--pad);
}

.pd2 {
    padding: 2rem;
}

.m0a {
    margin: 0 auto;
}

.mg {
    margin: 1rem;
}

.mg2 {
    margin: 2rem;
}

/* Flex */
.f {
    display: flex;
}

.f1 {
    flex: 1;
}

.c {
    flex-direction: column;
}

.r {
    flex-direction: row;
}

.cc {
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.rc {
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

.cs {
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
}

.rs {
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
}

.ce {
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
}

.re {
    flex-direction: row;
    justify-content: flex-end;
    align-items: center;
}

.spa {
    justify-content: space-around;
}

.spb {
    justify-content: space-between;
}

/* A set of items for lists that wrap */
.fi {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: stretch;
    justify-content: center;
}

.g_5 {
    gap: .5rem;
}

.g {
    gap: 1rem;
}

.g2 {
    gap: 2rem;
}

/*
Debug Utils
*/
.debug {
    border: var(--borders);
    border-color: blue;
    background-color: red;
}